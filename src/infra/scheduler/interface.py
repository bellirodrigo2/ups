from asyncio import Protocol
from datetime import datetime
from typing import Awaitable, Callable


class ITaskScheduler(Protocol):
    async def start(self) -> None: ...
    async def stop(self) -> None: ...
    async def schedule(
        self,
        coro: Callable[[str], Awaitable[datetime | None]],
        task_id: str,
        run_at: datetime,
    ) -> None: ...
    async def cancel(self, task_id: str) -> None: ...
    async def is_active(self, task_id: str) -> bool: ...
    async def next_run(self, task_id: str) -> datetime | None: ...
